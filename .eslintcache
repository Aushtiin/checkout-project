[{"/home/austin/projects/checkout-system/src/App.js":"1","/home/austin/projects/checkout-system/src/components/ProductList.js":"2","/home/austin/projects/checkout-system/src/components/Product.js":"3","/home/austin/projects/checkout-system/src/components/CartList.js":"4","/home/austin/projects/checkout-system/src/utils/ItemCount.js":"5"},{"size":1284,"mtime":1606318822530,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1606316861290,"results":"8","hashOfConfig":"7"},{"size":1010,"mtime":1606318741240,"results":"9","hashOfConfig":"7"},{"size":360,"mtime":1606316980340,"results":"10","hashOfConfig":"7"},{"size":890,"mtime":1606318643350,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12jep1m",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/austin/projects/checkout-system/src/App.js",[],"/home/austin/projects/checkout-system/src/components/ProductList.js",[],"/home/austin/projects/checkout-system/src/components/Product.js",["23"],"import React from 'react';\nimport './Product.css';\n\nfunction Product({ product, addToCart, inCart }) {\n    const { title, category, description, price, image, count } = product;\n    return (\n        <div className=\"wrapper\">\n            <div className=\"product-img\">\n                <img src={image} height=\"420\" width=\"327\" />\n            </div>\n            <div className=\"product-info\">\n                <div className=\"product-text\">\n                    <h1>{title}</h1>\n                    <h2>{category}</h2>\n                    <p>{description}</p>\n                </div>\n                <div className=\"product-price-btn\">\n                    <p>â‚¦<span>{price}</span></p>\n                    {inCart ? <></> :\n                        <button type=\"button\" onClick={() => addToCart(product)}>Add to cart</button>\n                    }\n                </div>\n                {inCart && count !== undefined  ? <div>{count}</div> : <></>}\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","/home/austin/projects/checkout-system/src/components/CartList.js",[],"/home/austin/projects/checkout-system/src/utils/ItemCount.js",["24","25"],{"ruleId":"26","severity":1,"message":"27","line":9,"column":17,"nodeType":"28","endLine":9,"endColumn":61},{"ruleId":"29","severity":1,"message":"30","line":13,"column":29,"nodeType":"31","messageId":"32","endLine":13,"endColumn":31},{"ruleId":"33","severity":1,"message":"34","line":22,"column":21,"nodeType":"35","messageId":"36","endLine":22,"endColumn":33},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral"]